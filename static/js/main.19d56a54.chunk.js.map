{"version":3,"sources":["Components/Button/Button.module.css","App.module.css","Components/Number/Number.tsx","Components/Button/Button.tsx","Components/NumberWindow/NumberWindow.tsx","Components/Input/Input.tsx","Components/ValueWindow/ValueWindow.tsx","bll/counterReducer.ts","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx","Components/NumberWindow/NumberWindow.module.css","Components/ValueWindow/ValueWindow.module.css","Components/Number/Number.module.css","Components/Input/Input.module.css"],"names":["module","exports","Number","value","maxValue","warning","className","s","WarningMessage","NumberMax","Button","callBack","disabled","title","button","onClick","NumberWindow","props","isAddDisabled","count","error","isResetDisabled","Content","ErrorMessage","addButton","countUpHandlerCallBack","resetButtons","countResetCallBack","Input","ErrorInput","type","onChange","e","ValueWindow","setDisabled","errorStart","errorMax","setButtonDisable","Wrapper","InputBox","ValueInput","newValueMax","currentTarget","SetMaxValueCallBack","startValue","newValueStart","SetStartValueCallBack","setItemInLocalStageCallBack","initialState","setStartValueAC","newStartValue","setMaxValueAC","newMaxValue","setCountAC","newCountValue","App","dispatch","useDispatch","useSelector","state","counter","useState","setErrorStart","setErrorMax","setWarning","disabledSetButton","setDisabledSetButton","setLocalStorageNumberHandler","localStorage","setItem","JSON","stringify","setCountItemFromLocalStorageTS","getLocalStorageHandler","getItem","parse","useEffect","setMaxAndStartValueInLocalStorageTC","setCountValueInLocalStorageTC","resetCountAC","setResetCountValueInLocalStorageTC","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19d56a54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2as4r\",\"disabled\":\"Button_disabled__jHtfX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"App_Content__3zI-R\"};","import React from 'react';\r\nimport s from \"./Number.module.css\";\r\n\r\ntype PropsType = {\r\n    maxValue: number\r\n    value: number\r\n    warning: boolean\r\n}\r\n\r\nexport const Number: React.FC<PropsType> = ({value, maxValue, warning}) => {\r\n    return (\r\n        warning\r\n            ? <div className={s.WarningMessage}>Enter values and press \"SET\"</div>\r\n            : <div className={value === maxValue ? `${s.NumberMax} + ${s.Number}` : s.Number}>{value}</div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport s from \"./Button.module.css\"\r\n\r\n\r\ntype PropsType = {\r\n    callBack: () => void\r\n    title: string\r\n    disabled?: boolean\r\n}\r\n\r\nexport const Button: React.FC<PropsType> = ({callBack, disabled, title}) => {\r\n\r\n    return (\r\n        <button\r\n            className={!disabled ? s.button : s.disabled}\r\n            disabled={disabled}\r\n            onClick={callBack}\r\n        >\r\n            {title}\r\n        </button>\r\n    )\r\n}\r\n\r\n/*\r\n{`${s.button}${!disabled?s.disabled:''}*/\r\n","import React from 'react';\r\nimport s from \"./NumberWindow.module.css\";\r\nimport {Number} from \"../Number/Number\";\r\nimport {Button} from \"../Button/Button\";\r\n\r\ntype PropsType = {\r\n    maxValue: number\r\n    startValue: number\r\n    count:number\r\n    countUpHandlerCallBack:()=>void\r\n    countResetCallBack:()=>void\r\n    error:boolean\r\n    warning:boolean\r\n}\r\n\r\nexport const NumberWindow: React.FC<PropsType> = (props) => {\r\n\r\n    const countUpHandler = () => props.countUpHandlerCallBack()\r\n    const countResetHandler = () => props.countResetCallBack()\r\n\r\n    const isAddDisabled = props.count === props.maxValue || props.error || props.warning\r\n    const isResetDisabled = props.count < props.maxValue || props.error || props.warning\r\n\r\n    return (\r\n            <div className={s.Content}>\r\n                <div className={s.Number}>\r\n                    {props.error\r\n                        ?<div className={s.ErrorMessage}>ERROR! Incorrect value in Input!</div>\r\n                        :<Number\r\n                            warning={props.warning}\r\n                            maxValue={props.maxValue}\r\n                            value={props.count}\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className={s.Button}>\r\n                    <div className={s.addButton}>\r\n                        <Button\r\n                            title={\"inc\"}\r\n                            callBack={countUpHandler}\r\n                            disabled={isAddDisabled}\r\n                        />\r\n                    </div>\r\n                    <div className={s.resetButtons}>\r\n                        <Button\r\n                            title={\"reset\"}\r\n                            callBack={countResetHandler}\r\n                            disabled={isResetDisabled}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from \"./Input.module.css\";\r\n\r\ntype PropsType = {\r\n    value: number\r\n    callBack: (e: ChangeEvent<HTMLInputElement>) => void\r\n    error:boolean\r\n}\r\n\r\nexport const Input: React.FC<PropsType> = ({value, callBack,error}) => {\r\n\r\n    const OnChangeHandler = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        callBack(e)\r\n    }\r\n\r\n    return (\r\n        <input\r\n            className={error? `${s.Input} + ${s.ErrorInput}` : s.Input}\r\n            type=\"number\"\r\n            value={value}\r\n            onChange={OnChangeHandler}\r\n        />\r\n    )\r\n\r\n}","import React, {ChangeEvent} from 'react';\r\nimport {Input} from \"../Input/Input\";\r\nimport {Button} from \"../Button/Button\";\r\nimport s from \"../ValueWindow/ValueWindow.module.css\";\r\n\r\n\r\ntype PropsType = {\r\n    SetMaxValueCallBack: (newValueMax: number) => void\r\n    SetStartValueCallBack: (newValueStart: number) => void\r\n    setItemInLocalStageCallBack: () => void\r\n    maxValue: number\r\n    startValue: number\r\n    errorStart: boolean\r\n    errorMax: boolean\r\n    setButtonDisable: boolean\r\n}\r\n\r\nexport const ValueWindow: React.FC<PropsType> = (props) => {\r\n\r\n    const setMaxValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newValueMax = +e.currentTarget.value\r\n        props.SetMaxValueCallBack(newValueMax)\r\n    }\r\n    const setStartValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newValueStart = +e.currentTarget.value\r\n        props.SetStartValueCallBack(newValueStart)\r\n    }\r\n\r\n    const setItemInLocalStorageHandler = () => {\r\n        props.setItemInLocalStageCallBack()\r\n    }\r\n\r\n    let setDisabled = props.errorStart || props.errorMax || props.setButtonDisable\r\n\r\n    return (\r\n        <div className={s.Wrapper}>\r\n            <div className={s.InputBox}>\r\n                <div className={s.ValueInput}>\r\n                    <span>Max value:</span><Input value={props.maxValue} callBack={setMaxValueHandler}\r\n                                                  error={props.errorMax}/>\r\n                </div>\r\n                <div className={s.ValueInput}>\r\n                    <span>Start value:</span><Input value={props.startValue} callBack={setStartValueHandler}\r\n                                                    error={props.errorStart}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.Button}>\r\n                <Button callBack={setItemInLocalStorageHandler} title={\"SET\"} disabled={setDisabled}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import {Dispatch} from \"redux\";\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionType =\r\n    |ReturnType<typeof setStartValueAC>\r\n    |ReturnType<typeof setMaxValueAC>\r\n    |ReturnType<typeof resetCountAC>\r\n    |ReturnType<typeof incrementCountAC>\r\n    |ReturnType<typeof setCountAC>\r\n\r\nlet initialState = {\r\n    startValue:0,\r\n    maxValue:0,\r\n    value:0\r\n}\r\n\r\nexport const counterReducer = (state:InitialStateType = initialState, action:ActionType):InitialStateType =>{\r\n    switch (action.type){\r\n        case \"SET-MAX-VALUE\":{\r\n            return {\r\n                ...state,\r\n                maxValue: action.newMaxValue\r\n            }\r\n        }\r\n        case \"SET-START-VALUE\":{\r\n            return {\r\n                ...state,\r\n                startValue: action.newStartValue\r\n            }\r\n        }\r\n        case \"SET-COUNT-VALUE\":{\r\n            return {\r\n                ...state,\r\n                value: action.newCountValue\r\n            }\r\n        }\r\n        case \"RESET-COUNT\":{\r\n            return {\r\n                ...state,\r\n                value: action.startValue\r\n            }\r\n        }\r\n        case \"INCREMENT-COUNT\":{\r\n            return {\r\n                ...state,\r\n                value: state.value + 1\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nexport const setStartValueAC = (newStartValue:number) =>{\r\n    return{type: \"SET-START-VALUE\", newStartValue} as const\r\n}\r\nexport const setMaxValueAC = (newMaxValue:number) =>{\r\n    return{type: \"SET-MAX-VALUE\", newMaxValue} as const\r\n}\r\nexport const setCountAC = (newCountValue:number) =>{\r\n    return{type: \"SET-COUNT-VALUE\", newCountValue} as const\r\n}\r\nexport const resetCountAC = (startValue:number) =>{\r\n    return{type: \"RESET-COUNT\", startValue} as const\r\n}\r\nexport const incrementCountAC = () =>{\r\n    return {type: \"INCREMENT-COUNT\"} as const\r\n}\r\n\r\n//thunk\r\n\r\nexport const setCountItemFromLocalStorageTS = (count:number) => {\r\n    localStorage.setItem(\"counterValue\", JSON.stringify(count))\r\n}\r\n\r\nexport const setCountValueInLocalStorageTC = (count:number)=> (dispatch:Dispatch)=>{\r\n    localStorage.setItem(\"counterValue\", JSON.stringify(count + 1))\r\n    dispatch(incrementCountAC())\r\n}\r\n\r\nexport const setResetCountValueInLocalStorageTC = (startValue:number)=> (dispatch:Dispatch)=>{\r\n    localStorage.setItem(\"counterValue\", JSON.stringify(startValue))\r\n    dispatch(resetCountAC(startValue))\r\n}\r\n\r\nexport const setMaxAndStartValueInLocalStorageTC = (startValue:number, maxValue:number, count:number)=> (dispatch:Dispatch)=>{\r\n    localStorage.setItem(\"startValue\", JSON.stringify(startValue))\r\n    localStorage.setItem(\"maxValue\", JSON.stringify(maxValue))\r\n    localStorage.setItem(\"counterValue\", JSON.stringify(count))\r\n    dispatch(setCountAC(startValue))\r\n}\r\n\r\nexport const getMaxAndStartValueInLocalStorageTC = ()=> (dispatch:Dispatch)=>{\r\n    let startValue = localStorage.getItem(\"startValue\")\r\n    let maxValue = localStorage.getItem(\"maxValue\")\r\n    let count = localStorage.getItem(\"counterValue\")\r\n    if (startValue && maxValue && count) {\r\n        dispatch(setStartValueAC(JSON.parse(startValue)))\r\n        dispatch(setMaxValueAC(JSON.parse(maxValue)))\r\n        dispatch(setCountAC(JSON.parse(count)))\r\n    }\r\n}","import React, {useEffect, useState} from 'react';\nimport s from \"./App.module.css\"\nimport {NumberWindow} from \"./Components/NumberWindow/NumberWindow\";\nimport {ValueWindow} from \"./Components/ValueWindow/ValueWindow\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./bll/store\";\nimport {\n    getMaxAndStartValueInLocalStorageTC, setCountItemFromLocalStorageTS,\n    setCountValueInLocalStorageTC, setMaxAndStartValueInLocalStorageTC,\n    setMaxValueAC, setResetCountValueInLocalStorageTC,\n    setStartValueAC\n} from \"./bll/counterReducer\";\n\nconst App = () => {\n\n    let dispatch = useDispatch()\n\n    let startValue = useSelector<AppRootStateType,number>(state => state.counter.startValue)\n    let maxValue = useSelector<AppRootStateType,number>(state => state.counter.maxValue)\n    const count = useSelector<AppRootStateType,number>(state => state.counter.value)\n\n    let [errorStart, setErrorStart] = useState(false)\n    let [errorMax, setErrorMax] = useState(false)\n    let [warning, setWarning] = useState(false)\n    let [disabledSetButton, setDisabledSetButton] = useState(true)\n\n    const countUp = () => count <= maxValue && dispatch(setCountValueInLocalStorageTC(count))\n    const countReset = () => dispatch(setResetCountValueInLocalStorageTC(startValue))\n\n    const setLocalStorageNumberHandler = () =>{\n        setCountItemFromLocalStorageTS(count)\n    }\n\n    const setItemInLocalStorage = () => {\n        dispatch(setMaxAndStartValueInLocalStorageTC(startValue,maxValue,count))\n        setWarning(false)\n        setDisabledSetButton(true)\n    }\n    const getLocalStorageHandler = () => {\n        dispatch(getMaxAndStartValueInLocalStorageTC())\n    }\n\n    const setStartValueHandler = (newValueStart:number) => {\n        if (newValueStart >= 0 && newValueStart < maxValue\n            && newValueStart !== maxValue && maxValue >= 0) {\n            setWarning(true)\n            setErrorStart(false)\n            setErrorMax(false)\n        } else {\n            setErrorStart(true)\n        }\n        dispatch(setStartValueAC(newValueStart))\n        setDisabledSetButton(false)\n    }\n\n    const setMaxValueHandler = (newValueMax:number) => {\n        if (newValueMax >= 0 && newValueMax > startValue\n            && newValueMax !== startValue && startValue >= 0) {\n            setWarning(true)\n            setErrorMax(false)\n            setErrorStart(false)\n        } else {\n            setErrorMax(true)\n        }\n        dispatch(setMaxValueAC(newValueMax))\n        setDisabledSetButton(false)\n    }\n    useEffect(() => {\n        getLocalStorageHandler()\n    }, [])\n\n    useEffect(() => {\n        setLocalStorageNumberHandler()\n    }, [count])\n\n    return (\n        <div className={s.Content}>\n            <ValueWindow\n                SetMaxValueCallBack={setMaxValueHandler}\n                SetStartValueCallBack={setStartValueHandler}\n                setItemInLocalStageCallBack={setItemInLocalStorage}\n                maxValue={maxValue}\n                startValue={startValue}\n                errorStart={errorStart}\n                errorMax={errorMax}\n                setButtonDisable={disabledSetButton}\n            />\n            <NumberWindow\n                maxValue={maxValue}\n                startValue={startValue}\n                count={count}\n                countUpHandlerCallBack={countUp}\n                countResetCallBack={countReset}\n                error={errorStart || errorMax}\n                warning={warning}\n            />\n        </div>\n    )\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {counterReducer} from \"./counterReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n    counter:counterReducer\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ,  document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"NumberWindow_Content__1TAPa\",\"Number\":\"NumberWindow_Number__2yGPy\",\"Button\":\"NumberWindow_Button__37YlQ\",\"ErrorMessage\":\"NumberWindow_ErrorMessage__2dL0F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ValueWindow_Wrapper__1Avdm\",\"InputBox\":\"ValueWindow_InputBox__29O-j\",\"ValueInput\":\"ValueWindow_ValueInput__1Tusj\",\"Button\":\"ValueWindow_Button__1oDqz\",\"Error\":\"ValueWindow_Error__3sjxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Number\":\"Number_Number__jFJ1H\",\"NumberMax\":\"Number_NumberMax__858Ir\",\"WarningMessage\":\"Number_WarningMessage__2xsuR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__lNdxY\",\"ErrorInput\":\"Input_ErrorInput__VN5gI\",\"Error\":\"Input_Error__IaRD4\"};"],"sourceRoot":""}