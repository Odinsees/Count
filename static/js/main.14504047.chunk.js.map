{"version":3,"sources":["Components/Button/Button.module.css","App.module.css","bll/store.ts","Components/Number/Number.tsx","Components/Button/Button.tsx","Components/NumberWindow/NumberWindow.tsx","Components/Input/Input.tsx","Components/ValueWindow/ValueWindow.tsx","bll/counterReducer.ts","App.tsx","reportWebVitals.ts","index.tsx","Components/NumberWindow/NumberWindow.module.css","Components/ValueWindow/ValueWindow.module.css","Components/Number/Number.module.css","Components/Input/Input.module.css"],"names":["module","exports","preloadedState","Number","value","maxValue","warning","className","s","WarningMessage","NumberMax","Button","callBack","disabled","title","button","onClick","NumberWindow","props","isAddDisabled","count","error","isResetDisabled","greeting","Content","ErrorMessage","addButton","countUpHandlerCallBack","resetButtons","countResetCallBack","Input","ErrorInput","type","onChange","e","ValueWindow","setDisabled","errorStart","errorMax","setButtonDisable","Wrapper","InputBox","ValueInput","newValueMax","currentTarget","SetMaxValueCallBack","startValue","newValueStart","SetStartValueCallBack","setItemInLocalStageCallBack","initialState","setStartValueAC","newStartValue","setMaxValueAC","newMaxValue","setGreetingAC","newValue","App","dispatch","useDispatch","useSelector","state","counter","useState","setErrorStart","setErrorMax","setWarning","disabledSetButton","setDisabledSetButton","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","newCountValue","persistedCounterString","localStorage","getItem","JSON","parse","store","createStore","applyMiddleware","thunk","subscribe","setItem","stringify","getState","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14504047.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2as4r\",\"disabled\":\"Button_disabled__jHtfX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"App_Content__3zI-R\"};","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {counterReducer} from \"./counterReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    counter:counterReducer\r\n})\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nlet preloadedState;\r\nconst persistedCounterString = localStorage.getItem(\"appState\")\r\nif (persistedCounterString){\r\n    preloadedState = JSON.parse(persistedCounterString)\r\n}\r\n\r\nexport const store = createStore(rootReducer, preloadedState, applyMiddleware(thunk))\r\n\r\nstore.subscribe(()=>{\r\n    localStorage.setItem(\"appState\", JSON.stringify(store.getState()))\r\n})\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store","import React from 'react';\r\nimport s from \"./Number.module.css\";\r\n\r\ntype PropsType = {\r\n    maxValue: number\r\n    value: number\r\n    warning: boolean\r\n}\r\n\r\nexport const Number: React.FC<PropsType> = ({value, maxValue, warning}) => {\r\n    return (\r\n        warning\r\n            ? <div className={s.WarningMessage}>Enter values and press \"SET\"</div>\r\n            : <div className={value === maxValue ? `${s.NumberMax} + ${s.Number}` : s.Number}>{value}</div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport s from \"./Button.module.css\"\r\n\r\n\r\ntype PropsType = {\r\n    callBack: () => void\r\n    title: string\r\n    disabled?: boolean\r\n}\r\n\r\nexport const Button: React.FC<PropsType> = ({callBack, disabled, title}) => {\r\n\r\n    return (\r\n        <button\r\n            className={disabled ? s.disabled : s.button}\r\n            disabled={disabled}\r\n            onClick={callBack}\r\n        >\r\n            {title}\r\n        </button>\r\n    )\r\n}\r\n\r\n/*\r\n{`${s.button}${!disabled?s.disabled:''}*/\r\n","import React from 'react';\r\nimport s from \"./NumberWindow.module.css\";\r\nimport {Number} from \"../Number/Number\";\r\nimport {Button} from \"../Button/Button\";\r\n\r\ntype PropsType = {\r\n    maxValue: number\r\n    startValue: number\r\n    count:number\r\n    countUpHandlerCallBack:()=>void\r\n    countResetCallBack:()=>void\r\n    error:boolean\r\n    warning:boolean\r\n    greeting:boolean\r\n}\r\n\r\nexport const NumberWindow: React.FC<PropsType> = (props) => {\r\n\r\n    const countUpHandler = () => props.countUpHandlerCallBack()\r\n    const countResetHandler = () => props.countResetCallBack()\r\n\r\n    const isAddDisabled = props.count === props.maxValue || props.error || props.warning\r\n    const isResetDisabled = props.count < props.maxValue || props.error || props.warning || props.greeting\r\n\r\n    return (\r\n            <div className={s.Content}>\r\n                <div className={s.Number}>\r\n                    {props.greeting\r\n                        ? <div className={s.WarningMessage}>Hi! Set start and max value</div>\r\n                        :props.error\r\n                            ?<div className={s.ErrorMessage}>ERROR! Incorrect value in Input!</div>\r\n                            :<Number\r\n                                warning={props.warning}\r\n                                maxValue={props.maxValue}\r\n                                value={props.count}\r\n                            />\r\n                    }\r\n                </div>\r\n                <div className={s.Button}>\r\n                    <div className={s.addButton}>\r\n                        <Button\r\n                            title={\"inc\"}\r\n                            callBack={countUpHandler}\r\n                            disabled={isAddDisabled}\r\n                        />\r\n                    </div>\r\n                    <div className={s.resetButtons}>\r\n                        <Button\r\n                            title={\"reset\"}\r\n                            callBack={countResetHandler}\r\n                            disabled={isResetDisabled}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from \"./Input.module.css\";\r\n\r\ntype PropsType = {\r\n    value: number\r\n    callBack: (e: ChangeEvent<HTMLInputElement>) => void\r\n    error:boolean\r\n}\r\n\r\nexport const Input: React.FC<PropsType> = ({value, callBack,error}) => {\r\n\r\n    const OnChangeHandler = (e:ChangeEvent<HTMLInputElement>) =>{\r\n        callBack(e)\r\n    }\r\n\r\n    return (\r\n        <input\r\n            className={error? `${s.Input} + ${s.ErrorInput}` : s.Input}\r\n            type=\"number\"\r\n            value={value}\r\n            onChange={OnChangeHandler}\r\n        />\r\n    )\r\n\r\n}","import React, {ChangeEvent} from 'react';\r\nimport {Input} from \"../Input/Input\";\r\nimport {Button} from \"../Button/Button\";\r\nimport s from \"../ValueWindow/ValueWindow.module.css\";\r\n\r\n\r\ntype PropsType = {\r\n    SetMaxValueCallBack: (newValueMax: number) => void\r\n    SetStartValueCallBack: (newValueStart: number) => void\r\n    setItemInLocalStageCallBack: () => void\r\n    maxValue: number\r\n    startValue: number\r\n    errorStart: boolean\r\n    errorMax: boolean\r\n    setButtonDisable: boolean\r\n}\r\n\r\nexport const ValueWindow: React.FC<PropsType> = (props) => {\r\n\r\n    const setMaxValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newValueMax = +e.currentTarget.value\r\n        props.SetMaxValueCallBack(newValueMax)\r\n    }\r\n    const setStartValueHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newValueStart = +e.currentTarget.value\r\n        props.SetStartValueCallBack(newValueStart)\r\n    }\r\n\r\n    const setItemInLocalStorageHandler = () => {\r\n        props.setItemInLocalStageCallBack()\r\n    }\r\n\r\n    let setDisabled = props.errorStart || props.errorMax || props.setButtonDisable\r\n\r\n    return (\r\n        <div className={s.Wrapper}>\r\n            <div className={s.InputBox}>\r\n                <div className={s.ValueInput}>\r\n                    <span>Max value:</span><Input value={props.maxValue} callBack={setMaxValueHandler}\r\n                                                  error={props.errorMax}/>\r\n                </div>\r\n                <div className={s.ValueInput}>\r\n                    <span>Start value:</span><Input value={props.startValue} callBack={setStartValueHandler}\r\n                                                    error={props.errorStart}/>\r\n                </div>\r\n            </div>\r\n            <div className={s.Button}>\r\n                <Button callBack={setItemInLocalStorageHandler} title={\"SET\"} disabled={setDisabled}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionType =\r\n    |ReturnType<typeof setStartValueAC>\r\n    |ReturnType<typeof setMaxValueAC>\r\n    |ReturnType<typeof resetCountAC>\r\n    |ReturnType<typeof incrementCountAC>\r\n    |ReturnType<typeof setCountAC>\r\n    |ReturnType<typeof setGreetingAC>\r\n\r\nlet initialState = {\r\n    startValue:0,\r\n    maxValue:0,\r\n    value:0,\r\n    greeting:true\r\n}\r\n\r\nexport const counterReducer = (state:InitialStateType = initialState, action:ActionType):InitialStateType =>{\r\n    switch (action.type){\r\n        case \"SET-MAX-VALUE\":{\r\n            return {\r\n                ...state,\r\n                maxValue: action.newMaxValue\r\n            }\r\n        }\r\n        case \"SET-START-VALUE\":{\r\n            return {\r\n                ...state,\r\n                startValue: action.newStartValue\r\n            }\r\n        }\r\n        case \"SET-COUNT-VALUE\":{\r\n            return {\r\n                ...state,\r\n                value: action.newCountValue\r\n            }\r\n        }\r\n        case \"RESET-COUNT\":{\r\n            return {\r\n                ...state,\r\n                value: state.startValue\r\n            }\r\n        }\r\n        case \"INCREMENT-COUNT\":{\r\n            return {\r\n                ...state,\r\n                value: state.value + 1\r\n            }\r\n        }\r\n        case \"SET-GREETING\":{\r\n            return {\r\n                ...state,\r\n                greeting: action.newValue\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nexport const setStartValueAC = (newStartValue:number) =>{\r\n    return{type: \"SET-START-VALUE\", newStartValue} as const\r\n}\r\nexport const setMaxValueAC = (newMaxValue:number) =>{\r\n    return{type: \"SET-MAX-VALUE\", newMaxValue} as const\r\n}\r\nexport const setCountAC = (newCountValue:number) =>{\r\n    return{type: \"SET-COUNT-VALUE\", newCountValue} as const\r\n}\r\nexport const resetCountAC = () =>{\r\n    return{type: \"RESET-COUNT\"} as const\r\n}\r\nexport const incrementCountAC = () =>{\r\n    return {type: \"INCREMENT-COUNT\"} as const\r\n}\r\n\r\nexport const setGreetingAC = (newValue:boolean) =>{\r\n    return{type: \"SET-GREETING\", newValue} as const\r\n}\r\n\r\n","import React, {useState} from 'react';\nimport s from \"./App.module.css\"\nimport {NumberWindow} from \"./Components/NumberWindow/NumberWindow\";\nimport {ValueWindow} from \"./Components/ValueWindow/ValueWindow\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./bll/store\";\nimport {\n    incrementCountAC, resetCountAC, setGreetingAC,\n    setMaxValueAC,\n    setStartValueAC\n} from \"./bll/counterReducer\";\n\nconst App = () => {\n\n    let dispatch = useDispatch()\n\n    let startValue = useSelector<AppRootStateType,number>(state => state.counter.startValue)\n    let maxValue = useSelector<AppRootStateType,number>(state => state.counter.maxValue)\n    const count = useSelector<AppRootStateType,number>(state => state.counter.value)\n    let greeting = useSelector<AppRootStateType,boolean>(state => state.counter.greeting)\n\n    let [errorStart, setErrorStart] = useState(false)\n    let [errorMax, setErrorMax] = useState(false)\n    let [warning, setWarning] = useState(false)\n    let [disabledSetButton, setDisabledSetButton] = useState(true)\n\n    const countUp = () => count <= maxValue && dispatch(incrementCountAC())\n    const countReset = () => dispatch(resetCountAC())\n\n    const setItemInLocalStorage = () => {\n        dispatch(setStartValueAC(startValue))\n        dispatch(setMaxValueAC(maxValue))\n        dispatch(resetCountAC())\n        setWarning(false)\n        setDisabledSetButton(true)\n    }\n\n    const setStartValueHandler = (newValueStart:number) => {\n        if (newValueStart >= 0 && newValueStart < maxValue\n            && newValueStart !== maxValue && maxValue >= 0) {\n            setWarning(true)\n            setErrorStart(false)\n            setErrorMax(false)\n            dispatch(setGreetingAC(false))\n        } else {\n            setErrorStart(true)\n        }\n        dispatch(setStartValueAC(newValueStart))\n        setDisabledSetButton(false)\n    }\n\n    const setMaxValueHandler = (newValueMax:number) => {\n        if (newValueMax >= 0 && newValueMax > startValue\n            && newValueMax !== startValue && startValue >= 0) {\n            setWarning(true)\n            setErrorMax(false)\n            setErrorStart(false)\n            dispatch(setGreetingAC(false))\n        } else {\n            setErrorMax(true)\n        }\n        dispatch(setMaxValueAC(newValueMax))\n        setDisabledSetButton(false)\n    }\n    return (\n        <div className={s.Content}>\n            <ValueWindow\n                SetMaxValueCallBack={setMaxValueHandler}\n                SetStartValueCallBack={setStartValueHandler}\n                setItemInLocalStageCallBack={setItemInLocalStorage}\n                maxValue={maxValue}\n                startValue={startValue}\n                errorStart={errorStart}\n                errorMax={errorMax}\n                setButtonDisable={disabledSetButton}\n            />\n            <NumberWindow\n                maxValue={maxValue}\n                startValue={startValue}\n                count={count}\n                countUpHandlerCallBack={countUp}\n                countResetCallBack={countReset}\n                error={errorStart || errorMax}\n                warning={warning}\n                greeting={greeting}\n            />\n        </div>\n    )\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./bll/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    ,  document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"NumberWindow_Content__1TAPa\",\"Number\":\"NumberWindow_Number__2yGPy\",\"Button\":\"NumberWindow_Button__37YlQ\",\"ErrorMessage\":\"NumberWindow_ErrorMessage__2dL0F\",\"WarningMessage\":\"NumberWindow_WarningMessage__tNH_S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"ValueWindow_Wrapper__1Avdm\",\"InputBox\":\"ValueWindow_InputBox__29O-j\",\"ValueInput\":\"ValueWindow_ValueInput__1Tusj\",\"Button\":\"ValueWindow_Button__1oDqz\",\"Error\":\"ValueWindow_Error__3sjxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Number\":\"Number_Number__jFJ1H\",\"NumberMax\":\"Number_NumberMax__858Ir\",\"WarningMessage\":\"Number_WarningMessage__2xsuR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__lNdxY\",\"ErrorInput\":\"Input_ErrorInput__VN5gI\",\"Error\":\"Input_Error__IaRD4\"};"],"sourceRoot":""}